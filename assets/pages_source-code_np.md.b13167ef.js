import{_ as a,o as t,c as n,S as e}from"./chunks/framework.92b709df.js";const h=JSON.parse('{"title":"NP","description":"","frontmatter":{},"headers":[],"relativePath":"pages/source-code/np.md","filePath":"pages/source-code/np.md","lastUpdated":1737296796000}'),l={name:"pages/source-code/np.md"};function p(o,s,r,c,d,i){return t(),n("div",null,s[0]||(s[0]=[e(`<h1 id="np" tabindex="-1">NP <a class="header-anchor" href="#np" aria-label="Permalink to &quot;NP&quot;">​</a></h1><blockquote><p>JavaScript 精确执行加、减、乘、除等运算。</p></blockquote><ul><li><a href="https://github.com/nefe/number-precision" target="_blank" rel="noreferrer">number-precision，简称：NP</a>，precision: 精度</li><li><a href="https://github.com/ly525/number-precision" target="_blank" rel="noreferrer">查看 源码解读 ✅</a></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">### </span><span style="color:#F78C6C;">1.</span><span style="color:#BABED8;"> 为什么要统一技术选型？</span></span>
<span class="line"><span style="color:#F78C6C;">1.</span><span style="color:#BABED8;"> 把一个吃透</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;">汇聚经验，形成最佳实践</span></span>
<span class="line"><span style="color:#F78C6C;">2.</span><span style="color:#BABED8;"> 目标：统一各业务线 </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">JS浮点数运算</span><span style="color:#89DDFF;">\`</span><span style="color:#BABED8;"> 的技术选型 </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> 最佳实践</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">### </span><span style="color:#F78C6C;">2.</span><span style="color:#BABED8;"> 为什么是 NP？</span></span>
<span class="line"><span style="color:#F78C6C;">1.</span><span style="color:#BABED8;"> 小：1KB（GZIP 之后）</span></span>
<span class="line"><span style="color:#F78C6C;">2.</span><span style="color:#BABED8;"> 代码量少：170行左右</span></span>
<span class="line"><span style="color:#F78C6C;">3.</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">**</span><span style="color:#BABED8;">团队大部分人都看过源码，有不支持的API，可以快速fork进行二开</span><span style="color:#89DDFF;">**</span></span>
<span class="line"><span style="color:#F78C6C;">4.</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">**</span><span style="color:#BABED8;">单元测试充分，覆盖了大部分场景</span><span style="color:#89DDFF;">**</span></span></code></pre></div><h3 id="业务使用场景" tabindex="-1">业务使用场景 <a class="header-anchor" href="#业务使用场景" aria-label="Permalink to &quot;业务使用场景&quot;">​</a></h3><table><thead><tr><th>端</th><th>场景</th><th>经验</th></tr></thead><tbody><tr><td>蓝桥App</td><td>多品名金额、重点计算</td><td><code>NP.plus.apply(NP, [1,2,3]) =&gt; 6</code></td></tr></tbody></table><h3 id="技巧-最佳实践" tabindex="-1">技巧/最佳实践 <a class="header-anchor" href="#技巧-最佳实践" aria-label="Permalink to &quot;技巧/最佳实践&quot;">​</a></h3><table><thead><tr><th>更多技巧</th><th>代码</th><th>经验</th></tr></thead><tbody><tr><td>多数字</td><td><code>NP.plus.apply(NP, [1,2,3]) =&gt; 6</code></td><td>----</td></tr><tr><td>多数字</td><td><code>NP.plus.apply(NP, array.filter(i =&gt; !!i)) =&gt; 6</code></td><td>只支持 Number/String</td></tr><tr><td>多数字</td><td><code>NP.plus.apply(NP, [1,2,3, null, undefined].filter(i =&gt; !!i)) =&gt; 6</code></td><td>----</td></tr></tbody></table>`,8)]))}const u=a(l,[["render",p]]);export{h as __pageData,u as default};
